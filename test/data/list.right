(dbg-test1.sh:22):
x=22
+# Test of debugger 'list' command
+#
+help l
list[>] [LOC|.|-] [COUNT] -- List COUNT lines of a script centered around LOC

LOC is the starting location or dot (.) for current file and
line. Subsequent list commands continue from the last line
listed. Frame switching however resets the line to dot.

If COUNT is omitted, use the setting LISTSIZE. Use "set listsize" to
change this setting.

By default aliases "l>" and "list>" are set to list. In this case and
more generally when the alias ends in ">", rather than center lines
around LOC that will be used as the starting point.


Aliases for list: l, l>, list>
+### List default location
+list
 17:    fn3() {
 18:        name="fn3"
 19:        x=$1
 20:    }
 21:
 22: => x=22
 23:    y=23
 24:    for i in 0 1 3 ; do
 25:      ((x += i))
 26:    done
+### Should list next sets of lines
+list
 27:    x=27
 28:    y=b
 29:    x=29
 30:    echo $(fn3 30)
 31:    fn3 31
 32:    fn1;
 33:    fn3 33
 34:    # source example/dbg-test1.sub
 35:    exit 0;
 36:
+list
 36:
+list
 36:
+### Original set and then beginning
+list .
 17:    fn3() {
 18:        name="fn3"
 19:        x=$1
 20:    }
 21:
 22: => x=22
 23:    y=23
 24:    for i in 0 1 3 ; do
 25:      ((x += i))
 26:    done
+list -
  2:    # Note: no CVS Id line since it would mess up regression testing.
  3:    # This code is used for various debugger testing.
  4:
  5:    fn1() {
  6:        echo "fn1 here"
  7:        x=5
  8:        fn3
  9:    }
 10:
 11:    fn2() {
+#
+# Should not see anything since we are out of bounds
+#
+list 999
** Line 994 is too large. File dbg-test1.sh has only 36 lines.
+#########################################################
+### 'list file:line' and canonicalization of filenames...
+list ../example/dbg-test1.sh:1
  1:    text
  2:    # Note: no CVS Id line since it would mess up regression testing.
  3:    # This code is used for various debugger testing.
  4:
  5:    fn1() {
  6:        echo "fn1 here"
  7:        x=5
  8:        fn3
  9:    }
 10:
+list ../example/dbg-test1.sh:20
 15:    }
 16:
 17:    fn3() {
 18:        name="fn3"
 19:        x=$1
 20:    }
 21:
 22: => x=22
 23:    y=23
 24:    for i in 0 1 3 ; do
+list ../example/dbg-test1.sh:30
 25:      ((x += i))
 26:    done
 27:    x=27
 28:    y=b
 29:    x=29
 30:    echo $(fn3 30)
 31:    fn3 31
 32:    fn1;
 33:    fn3 33
 34:    # source example/dbg-test1.sub
+list ../example/dbg-test1.sh:999
** Line 994 is too large. File dbg-test1.sh has only 36 lines.
+list ./badfile:1
** File "badfile" not found in read-in files.
** See 'info files' for a list of known files and
** 'load' to read in a file.
+#########################################################
+set trace-commands on
+### list of functions...
+## list fn1
+## list bogus
+#########################################################
+### Testing window command..."
+## window
+### Testing '.'
+# l .
+#
+### Testing set/show listsize
+show listsize
Number of source lines kshdb will list by default is 10.
+### Setting listsize to 3...
+set listsize 3
+list 10
  9:    }
 10:
 11:    fn2() {
+### Window command...
+## w
+## p "- command..."
+## -
+### Setting listsize to 4...
+set listsize 4
+show listsize
Number of source lines kshdb will list by default is 4.
+list 10
  8:        fn3
  9:    }
 10:
 11:    fn2() {
+### Window command...
+## w
+### '-' command...
+### -
+#<-This comment doesn't have a space after
+#the initial `#'
+quit
kshdb: That's all, folks...
